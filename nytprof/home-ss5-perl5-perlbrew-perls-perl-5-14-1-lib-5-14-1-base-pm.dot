digraph {
graph [overlap=false]
subgraph cluster_base {
	label="base";
	"base::BEGIN@3";
	"base::BEGIN@4";
	"base::has_fields";
	"base::has_attr";
	"base::CORE:match";
	"base::import";
}
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
}
subgraph cluster_Iterator_X_Exhausted {
	label="Iterator::X::Exhausted";
	"Iterator::X::Exhausted::BEGIN@3";
}
subgraph cluster_Iterator_X_OptionError {
	label="Iterator::X::OptionError";
	"Iterator::X::OptionError::BEGIN@3";
}
subgraph cluster_Iterator_X {
	label="Iterator::X";
	"Iterator::X::BEGIN@3";
}
subgraph cluster_Iterator_X_IO_Error {
	label="Iterator::X::IO_Error";
	"Iterator::X::IO_Error::BEGIN@3";
}
subgraph cluster_UNIVERSAL {
	label="UNIVERSAL";
	"UNIVERSAL::isa";
}
subgraph cluster_Iterator_X_Parameter_Error {
	label="Iterator::X::Parameter_Error";
	"Iterator::X::Parameter_Error::BEGIN@3";
}
subgraph cluster_Iterator_X_User_Code_Error {
	label="Iterator::X::User_Code_Error";
	"Iterator::X::User_Code_Error::BEGIN@3";
}
subgraph cluster_Iterator_X_Internal_Error {
	label="Iterator::X::Internal_Error";
	"Iterator::X::Internal_Error::BEGIN@3";
}
subgraph cluster_Iterator_Util {
	label="Iterator::Util";
	"Iterator::Util::BEGIN@20";
}
subgraph cluster_Iterator_X_Am_Now_Exhausted {
	label="Iterator::X::Am_Now_Exhausted";
	"Iterator::X::Am_Now_Exhausted::BEGIN@3";
}
subgraph cluster_Exception_Class_Base {
	label="Exception::Class::Base";
	"Exception::Class::Base::BEGIN@13";
}
"Iterator::Util::BEGIN@20" -> "base::BEGIN@3";
"Iterator::Util::BEGIN@20" -> "base::BEGIN@4";
"Iterator::X::Parameter_Error::BEGIN@3" -> "base::import";
"Iterator::X::OptionError::BEGIN@3" -> "base::import";
"Iterator::X::BEGIN@3" -> "base::import";
"Iterator::X::User_Code_Error::BEGIN@3" -> "base::import";
"Iterator::X::Exhausted::BEGIN@3" -> "base::import";
"Iterator::Util::BEGIN@20" -> "base::import";
"Exception::Class::Base::BEGIN@13" -> "base::import";
"Iterator::X::Internal_Error::BEGIN@3" -> "base::import";
"Iterator::X::Am_Now_Exhausted::BEGIN@3" -> "base::import";
"Iterator::X::IO_Error::BEGIN@3" -> "base::import";
"base::import" -> "UNIVERSAL::isa";
"base::import" -> "base::has_fields";
"base::BEGIN@4" -> "vars::import";
"base::import" -> "base::CORE:match";
"base::import" -> "base::has_attr";
"base::BEGIN@3" -> "strict::import";
}
